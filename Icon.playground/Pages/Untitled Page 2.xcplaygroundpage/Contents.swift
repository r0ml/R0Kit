//: A UIKit based Playground for presenting user interface

import R0Kit
import PlaygroundSupport

class MyView : View {
  
  override public func draw(_ r : CGRect) {
    
    
    let context = UIGraphicsGetCurrentContext()
    context?.saveGState()
    
    context?.translateBy(x: self.frame.width / 2, y: self.frame.height / 2)
    context?.scaleBy(x: self.frame.width / 64000, y: self.frame.height / 64000)
    
    // This code was generated by Trial version of PaintCode, therefore cannot be used for commercial purposes.
    // http://www.paintcodeapp.com
    
    //// Color Declarations
    let strokeColor = Color(red: 0, green: 0, blue: 0, alpha: 1)
    let textForeground = Color(red: 0, green: 0, blue: 0, alpha: 1)
    
    //// noun_1084878_cc.svg Group
    //// Group 2
    //// Bezier Drawing
    let bezierPath = BezierPath()
    bezierPath.move(to: NSPoint(x: -10635, y: 977))
    bezierPath.curve(to: NSPoint(x: -10921, y: -2856), controlPoint1: NSPoint(x: -10748, y: -216), controlPoint2: NSPoint(x: -10861, y: -1409))
    bezierPath.curve(to: NSPoint(x: -10904, y: -7710), controlPoint1: NSPoint(x: -10982, y: -4303), controlPoint2: NSPoint(x: -10990, y: -6005))
    bezierPath.curve(to: NSPoint(x: -10360, y: -12776), controlPoint1: NSPoint(x: -10818, y: -9416), controlPoint2: NSPoint(x: -10637, y: -11125))
    bezierPath.curve(to: NSPoint(x: -9407, y: -17133), controlPoint1: NSPoint(x: -10082, y: -14426), controlPoint2: NSPoint(x: -9707, y: -16017))
    bezierPath.curve(to: NSPoint(x: -8657, y: -19528), controlPoint1: NSPoint(x: -9107, y: -18249), controlPoint2: NSPoint(x: -8882, y: -18889))
    strokeColor.setStroke()
    bezierPath.lineWidth = 762
    bezierPath.miterLimit = 4
    bezierPath.lineCapStyle = .roundLineCapStyle
    bezierPath.lineJoinStyle = .roundLineJoinStyle
    bezierPath.stroke()
    
    
    //// Bezier 2 Drawing
    let bezier2Path = BezierPath()
    bezier2Path.move(to: NSPoint(x: -8657, y: -19528))
    bezier2Path.curve(to: NSPoint(x: -5647, y: -19150), controlPoint1: NSPoint(x: -7642, y: -19382), controlPoint2: NSPoint(x: -6628, y: -19235))
    bezier2Path.curve(to: NSPoint(x: -2682, y: -19085), controlPoint1: NSPoint(x: -4667, y: -19065), controlPoint2: NSPoint(x: -3720, y: -19041))
    bezier2Path.curve(to: NSPoint(x: 581, y: -19442), controlPoint1: NSPoint(x: -1644, y: -19128), controlPoint2: NSPoint(x: -514, y: -19239))
    bezier2Path.curve(to: NSPoint(x: 3702, y: -20172), controlPoint1: NSPoint(x: 1675, y: -19646), controlPoint2: NSPoint(x: 2734, y: -19942))
    bezier2Path.curve(to: NSPoint(x: 6579, y: -20702), controlPoint1: NSPoint(x: 4669, y: -20401), controlPoint2: NSPoint(x: 5545, y: -20564))
    bezier2Path.curve(to: NSPoint(x: 10037, y: -20910), controlPoint1: NSPoint(x: 7613, y: -20840), controlPoint2: NSPoint(x: 8806, y: -20953))
    bezier2Path.curve(to: NSPoint(x: 13332, y: -20512), controlPoint1: NSPoint(x: 11268, y: -20866), controlPoint2: NSPoint(x: 12537, y: -20668))
    bezier2Path.curve(to: NSPoint(x: 14776, y: -19879), controlPoint1: NSPoint(x: 14126, y: -20356), controlPoint2: NSPoint(x: 14446, y: -20243))
    bezier2Path.curve(to: NSPoint(x: 15630, y: -18307), controlPoint1: NSPoint(x: 15107, y: -19514), controlPoint2: NSPoint(x: 15448, y: -18898))
    bezier2Path.curve(to: NSPoint(x: 15728, y: -16704), controlPoint1: NSPoint(x: 15812, y: -17716), controlPoint2: NSPoint(x: 15836, y: -17150))
    bezier2Path.curve(to: NSPoint(x: 15144, y: -15608), controlPoint1: NSPoint(x: 15621, y: -16258), controlPoint2: NSPoint(x: 15383, y: -15933))
    strokeColor.setStroke()
    bezier2Path.lineWidth = 762
    bezier2Path.miterLimit = 4
    bezier2Path.lineCapStyle = .roundLineCapStyle
    bezier2Path.lineJoinStyle = .roundLineJoinStyle
    bezier2Path.stroke()
    
    
    //// Bezier 3 Drawing
    let bezier3Path = BezierPath()
    bezier3Path.move(to: NSPoint(x: 15144, y: -15608))
    bezier3Path.curve(to: NSPoint(x: 16611, y: -15197), controlPoint1: NSPoint(x: 15653, y: -15503), controlPoint2: NSPoint(x: 16161, y: -15398))
    bezier3Path.curve(to: NSPoint(x: 17750, y: -14331), controlPoint1: NSPoint(x: 17061, y: -14995), controlPoint2: NSPoint(x: 17452, y: -14696))
    bezier3Path.curve(to: NSPoint(x: 18373, y: -13001), controlPoint1: NSPoint(x: 18049, y: -13965), controlPoint2: NSPoint(x: 18256, y: -13532))
    bezier3Path.curve(to: NSPoint(x: 18442, y: -11365), controlPoint1: NSPoint(x: 18490, y: -12471), controlPoint2: NSPoint(x: 18516, y: -11841))
    bezier3Path.curve(to: NSPoint(x: 17983, y: -10275), controlPoint1: NSPoint(x: 18367, y: -10890), controlPoint2: NSPoint(x: 18192, y: -10567))
    bezier3Path.curve(to: NSPoint(x: 17292, y: -9458), controlPoint1: NSPoint(x: 17775, y: -9982), controlPoint2: NSPoint(x: 17534, y: -9720))
    strokeColor.setStroke()
    bezier3Path.lineWidth = 762
    bezier3Path.miterLimit = 4
    bezier3Path.lineCapStyle = .roundLineCapStyle
    bezier3Path.lineJoinStyle = .roundLineJoinStyle
    bezier3Path.stroke()
    
    
    //// Bezier 4 Drawing
    let bezier4Path = BezierPath()
    bezier4Path.move(to: NSPoint(x: 17292, y: -9458))
    bezier4Path.curve(to: NSPoint(x: 18590, y: -8567), controlPoint1: NSPoint(x: 17746, y: -9162), controlPoint2: NSPoint(x: 18200, y: -8866))
    bezier4Path.curve(to: NSPoint(x: 19546, y: -7567), controlPoint1: NSPoint(x: 18981, y: -8268), controlPoint2: NSPoint(x: 19309, y: -7967))
    bezier4Path.curve(to: NSPoint(x: 19980, y: -6230), controlPoint1: NSPoint(x: 19784, y: -7167), controlPoint2: NSPoint(x: 19931, y: -6669))
    bezier4Path.curve(to: NSPoint(x: 19872, y: -5059), controlPoint1: NSPoint(x: 20030, y: -5791), controlPoint2: NSPoint(x: 19983, y: -5410))
    bezier4Path.curve(to: NSPoint(x: 19285, y: -4026), controlPoint1: NSPoint(x: 19760, y: -4708), controlPoint2: NSPoint(x: 19585, y: -4385))
    bezier4Path.curve(to: NSPoint(x: 18286, y: -3039), controlPoint1: NSPoint(x: 18985, y: -3667), controlPoint2: NSPoint(x: 18560, y: -3271))
    bezier4Path.curve(to: NSPoint(x: 17766, y: -2670), controlPoint1: NSPoint(x: 18012, y: -2807), controlPoint2: NSPoint(x: 17889, y: -2738))
    strokeColor.setStroke()
    bezier4Path.lineWidth = 762
    bezier4Path.miterLimit = 4
    bezier4Path.lineCapStyle = .roundLineCapStyle
    bezier4Path.lineJoinStyle = .roundLineJoinStyle
    bezier4Path.stroke()
    
    
    //// Bezier 5 Drawing
    let bezier5Path = BezierPath()
    bezier5Path.move(to: NSPoint(x: 17766, y: -2670))
    bezier5Path.curve(to: NSPoint(x: 18883, y: -1582), controlPoint1: NSPoint(x: 18159, y: -2309), controlPoint2: NSPoint(x: 18553, y: -1947))
    bezier5Path.curve(to: NSPoint(x: 19626, y: -384), controlPoint1: NSPoint(x: 19213, y: -1218), controlPoint2: NSPoint(x: 19481, y: -851))
    bezier5Path.curve(to: NSPoint(x: 19752, y: 1123), controlPoint1: NSPoint(x: 19772, y: 82), controlPoint2: NSPoint(x: 19796, y: 649))
    bezier5Path.curve(to: NSPoint(x: 19424, y: 2303), controlPoint1: NSPoint(x: 19709, y: 1598), controlPoint2: NSPoint(x: 19599, y: 1980))
    bezier5Path.curve(to: NSPoint(x: 18703, y: 3152), controlPoint1: NSPoint(x: 19248, y: 2625), controlPoint2: NSPoint(x: 19007, y: 2887))
    bezier5Path.curve(to: NSPoint(x: 17692, y: 3856), controlPoint1: NSPoint(x: 18399, y: 3417), controlPoint2: NSPoint(x: 18032, y: 3685))
    bezier5Path.curve(to: NSPoint(x: 16383, y: 4195), controlPoint1: NSPoint(x: 17353, y: 4028), controlPoint2: NSPoint(x: 17041, y: 4105))
    bezier5Path.curve(to: NSPoint(x: 13524, y: 4409), controlPoint1: NSPoint(x: 15725, y: 4286), controlPoint2: NSPoint(x: 14721, y: 4391))
    bezier5Path.curve(to: NSPoint(x: 10023, y: 4335), controlPoint1: NSPoint(x: 12327, y: 4428), controlPoint2: NSPoint(x: 10938, y: 4360))
    bezier5Path.curve(to: NSPoint(x: 8227, y: 4347), controlPoint1: NSPoint(x: 9107, y: 4310), controlPoint2: NSPoint(x: 8667, y: 4329))
    strokeColor.setStroke()
    bezier5Path.lineWidth = 762
    bezier5Path.miterLimit = 4
    bezier5Path.lineCapStyle = .roundLineCapStyle
    bezier5Path.lineJoinStyle = .roundLineJoinStyle
    bezier5Path.stroke()
    
    
    //// Bezier 6 Drawing
    let bezier6Path = BezierPath()
    bezier6Path.move(to: NSPoint(x: -10635, y: 977))
    bezier6Path.curve(to: NSPoint(x: -8864, y: 1123), controlPoint1: NSPoint(x: -10066, y: 1016), controlPoint2: NSPoint(x: -9497, y: 1055))
    bezier6Path.curve(to: NSPoint(x: -6955, y: 1548), controlPoint1: NSPoint(x: -8231, y: 1191), controlPoint2: NSPoint(x: -7533, y: 1288))
    bezier6Path.curve(to: NSPoint(x: -5452, y: 2808), controlPoint1: NSPoint(x: -6377, y: 1807), controlPoint2: NSPoint(x: -5918, y: 2229))
    bezier6Path.curve(to: NSPoint(x: -4080, y: 4736), controlPoint1: NSPoint(x: -4987, y: 3388), controlPoint2: NSPoint(x: -4515, y: 4124))
    bezier6Path.curve(to: NSPoint(x: -2620, y: 6472), controlPoint1: NSPoint(x: -3645, y: 5349), controlPoint2: NSPoint(x: -3246, y: 5836))
    bezier6Path.curve(to: NSPoint(x: -162, y: 8733), controlPoint1: NSPoint(x: -1995, y: 7107), controlPoint2: NSPoint(x: -1143, y: 7891))
    bezier6Path.curve(to: NSPoint(x: 2749, y: 11258), controlPoint1: NSPoint(x: 819, y: 9574), controlPoint2: NSPoint(x: 1928, y: 10473))
    bezier6Path.curve(to: NSPoint(x: 4504, y: 13296), controlPoint1: NSPoint(x: 3569, y: 12043), controlPoint2: NSPoint(x: 4102, y: 12714))
    bezier6Path.curve(to: NSPoint(x: 5395, y: 14992), controlPoint1: NSPoint(x: 4907, y: 13878), controlPoint2: NSPoint(x: 5179, y: 14371))
    bezier6Path.curve(to: NSPoint(x: 5824, y: 16960), controlPoint1: NSPoint(x: 5610, y: 15614), controlPoint2: NSPoint(x: 5767, y: 16363))
    bezier6Path.curve(to: NSPoint(x: 5882, y: 18344), controlPoint1: NSPoint(x: 5880, y: 17556), controlPoint2: NSPoint(x: 5836, y: 17999))
    bezier6Path.curve(to: NSPoint(x: 6295, y: 19178), controlPoint1: NSPoint(x: 5928, y: 18689), controlPoint2: NSPoint(x: 6064, y: 18935))
    bezier6Path.curve(to: NSPoint(x: 7235, y: 19800), controlPoint1: NSPoint(x: 6525, y: 19420), controlPoint2: NSPoint(x: 6851, y: 19659))
    bezier6Path.curve(to: NSPoint(x: 8535, y: 19998), controlPoint1: NSPoint(x: 7619, y: 19942), controlPoint2: NSPoint(x: 8062, y: 19986))
    bezier6Path.curve(to: NSPoint(x: 9947, y: 19844), controlPoint1: NSPoint(x: 9008, y: 20009), controlPoint2: NSPoint(x: 9512, y: 19988))
    bezier6Path.curve(to: NSPoint(x: 11112, y: 19070), controlPoint1: NSPoint(x: 10382, y: 19700), controlPoint2: NSPoint(x: 10749, y: 19433))
    bezier6Path.curve(to: NSPoint(x: 12124, y: 17641), controlPoint1: NSPoint(x: 11475, y: 18709), controlPoint2: NSPoint(x: 11834, y: 18253))
    bezier6Path.curve(to: NSPoint(x: 12762, y: 15566), controlPoint1: NSPoint(x: 12413, y: 17030), controlPoint2: NSPoint(x: 12633, y: 16265))
    bezier6Path.curve(to: NSPoint(x: 12862, y: 13450), controlPoint1: NSPoint(x: 12890, y: 14868), controlPoint2: NSPoint(x: 12927, y: 14236))
    bezier6Path.curve(to: NSPoint(x: 12344, y: 10856), controlPoint1: NSPoint(x: 12798, y: 12665), controlPoint2: NSPoint(x: 12633, y: 11727))
    bezier6Path.curve(to: NSPoint(x: 11106, y: 8387), controlPoint1: NSPoint(x: 12055, y: 9986), controlPoint2: NSPoint(x: 11644, y: 9184))
    bezier6Path.curve(to: NSPoint(x: 9404, y: 6126), controlPoint1: NSPoint(x: 10568, y: 7590), controlPoint2: NSPoint(x: 9905, y: 6798))
    bezier6Path.curve(to: NSPoint(x: 8227, y: 4347), controlPoint1: NSPoint(x: 8903, y: 5454), controlPoint2: NSPoint(x: 8565, y: 4900))
    strokeColor.setStroke()
    bezier6Path.lineWidth = 762
    bezier6Path.miterLimit = 4
    bezier6Path.lineCapStyle = .roundLineCapStyle
    bezier6Path.lineJoinStyle = .roundLineJoinStyle
    bezier6Path.stroke()
    
    
    //// Bezier 7 Drawing
    let bezier7Path = BezierPath()
    bezier7Path.move(to: NSPoint(x: 5856, y: 17652))
    bezier7Path.curve(to: NSPoint(x: 6967, y: 16982), controlPoint1: NSPoint(x: 6248, y: 17508), controlPoint2: NSPoint(x: 6640, y: 17364))
    bezier7Path.curve(to: NSPoint(x: 7583, y: 15236), controlPoint1: NSPoint(x: 7294, y: 16600), controlPoint2: NSPoint(x: 7556, y: 15980))
    bezier7Path.curve(to: NSPoint(x: 7060, y: 12968), controlPoint1: NSPoint(x: 7611, y: 14492), controlPoint2: NSPoint(x: 7405, y: 13623))
    bezier7Path.curve(to: NSPoint(x: 5764, y: 11673), controlPoint1: NSPoint(x: 6716, y: 12314), controlPoint2: NSPoint(x: 6233, y: 11873))
    bezier7Path.curve(to: NSPoint(x: 4495, y: 11648), controlPoint1: NSPoint(x: 5296, y: 11473), controlPoint2: NSPoint(x: 4841, y: 11515))
    bezier7Path.curve(to: NSPoint(x: 3679, y: 12232), controlPoint1: NSPoint(x: 4150, y: 11781), controlPoint2: NSPoint(x: 3915, y: 12007))
    strokeColor.setStroke()
    bezier7Path.lineWidth = 762
    bezier7Path.miterLimit = 4
    bezier7Path.lineCapStyle = .roundLineCapStyle
    bezier7Path.lineJoinStyle = .roundLineJoinStyle
    bezier7Path.stroke()
    
    context?.restoreGState()
  }
  
}

let z = "clean"

/*
 class MyViewController : ViewController {
 override func loadView() {
 self.view = MyView(frame: CGRect(x:0, y:0, width: 100, height: 100))
 self.view.backgroundColor = Color.green
 }
 }
 */


// Present the view controller in the Live View window

let vv = MyView(frame: CGRect(x:0, y:0, width: 100, height: 100))
 vv.backgroundColor = Color.orange

PlaygroundPage.current.liveView =  vv // MyViewController()

